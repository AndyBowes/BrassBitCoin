
@{
    ViewData["Title"] = "Yorkshire Block Chain";
}

<h2>Yorkshire Block Chain</h2>

@*<div id="markdownId"></div>*@

A block is defined as the following fields:
<ul>
    <li>index :int64</li>
    <li>minedBy: string</li>
    <li>data :  string</li>
    <li>previousHash : string</li>
    <li>nonce: int64</li>
    <li>hash : string</li>
</ul>
The hash is made by concatenating all the above fields (excluding the hash) in the above order with a single space between each value (see below).

The first block (the 'Genesis' block) is defined as:
<ul>
    <li>index = 0</li>
    <li>minedBy = "Genesis"</li>
    <li>data = "Genesis"</li>
    <li>previousHash = 0</li>
    <li>nonce = 52458</li>
    <li>hash = "000021C1766F55BD5D413F0AC128A5D3D6B50E4F0D608B653209C4D468232C11"</li>
</ul>
So the concatenated block values used to generate the hash are:
"0 Genesis Genesis 0 52458"
Which generates the following SHA256 hash value (which is converted to text in upper case):
000021C1766F55BD5D413F0AC128A5D3D6B50E4F0D608B653209C4D468232C11

Subsequent block must meet the following criteria:
<ul>
    <li>index + 1 of the previous block</li>
    <li>minedBy is the name of the block minder (your name / id)</li>
    <li>data is any arbitrary data to store in the block - (this would be any transactions in this block for bitcoin)</li>
    <li>previousHash is the hash of the previous block</li>
    <li>nonce (the nonsense number) a number which can be changed to make a valid hash (see below)</li>
    <li>hash of the block starts with 4 zeros. If it is not valid, try another nonce value!</li>
</ul>



@section Scripts {
    <script src="https://cdn.rawgit.com/showdownjs/showdown/1.8.6/dist/showdown.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            var converter = new showdown.Converter();
            var text = '#hello, markdown!';
            var html = converter.makeHtml(text);

            $('#markdownId').html(html);
        });
    </script>
}